<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Real time Dashboard - SystemWatch </title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    
</head>
<body>
    
    <div class="container">
        <h1 class="d-flex align-items-center justify-content-center" style="min-height: 30vh"><%= computer.computerName %></h1>
        <div id="monitor">

        </div>
        <div id="corestatus">

        </div>
    </div>

    <%- include('../partials/footer'); %>
</body>

<!-- On importe SocketIO et Axios -->
<script src="https://cdn.socket.io/4.4.1/socket.io.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script>
    // Socket Connection
    const socketHost = "<%= socketHost %>:<%= listenPort %>"
    const computer = JSON.parse('<%- JSON.stringify(computer) %>')
    const socket = io(`${socketHost}?computerID=${computer.computerID}`)

    socket.on("welcome", function(data) {
        console.log("Connection made")
    })

    socket.on("corestatuschannel", function(data){
        // TODO: What to do when a new corestatus is received
        console.log(`new core status added ${data}`)
        document.querySelector("#monitor").textContent = data

        counter = counter + 1

        console.log(counter)
        
        if(counter == computer.CPU.coreNumber+1){
            document.querySelector("#corestatus").innerHTML = data + "<br>"
            counter = 1
        } else {
            document.querySelector("#corestatus").innerHTML += data + "<br>"            
        }

    })

    let counter = 0
    socket.on("monitorchannel", async function(data){
        // TODO: What to do when a new monitor is received
        console.log(`new monitor status added ${data}`)

        
    })

    // Getting existingData : 

    let currentDate = new Date()
    let previousDate =  new Date()
    previousDate.setMinutes(previousDate.getMinutes() - 5)

    let finishDateString = `${currentDate.getFullYear()}-${('00'+(currentDate.getMonth()+1)).slice(-2)}-${('00'+(currentDate.getDate()+1)).slice(-2)}/${('00'+(currentDate.getHours()+1)).slice(-2)}:${('00'+(currentDate.getMinutes()+1)).slice(-2)}:${('00'+(currentDate.getSeconds()+1)).slice(-2)}`
    let startDateString = `${previousDate.getFullYear()}-${('00'+(previousDate.getMonth()+1)).slice(-2)}-${('00'+(previousDate.getDate()+1)).slice(-2)}/${('00'+(previousDate.getHours()+1)).slice(-2)}:${('00'+(previousDate.getMinutes()+1)).slice(-2)}:${('00'+(previousDate.getSeconds()+1)).slice(-2)}`

    axios.get(`http://${socketHost}/api/monitor/interval/${computer.computerID}/${startDateString}/${finishDateString}`)
    .then(function(response){
        // Here Will the the data from the 5 last minutes
    })

</script>
</html>